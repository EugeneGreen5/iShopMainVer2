// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using iShopMain.Data;

#nullable disable

namespace iShopMainVer2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("iShopMain.Models.Entity.UserInfo.AccountEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("606d29c4-7610-48ee-871e-d1308167f893"),
                            Login = "alesha@mail.ru",
                            Password = "3C9909AFEC25354D551DAE21590BB26E38D53F2173B8D3DC3EEE4C047E7AB1C1EB8B85103E3BE7BA613B31BB5C9C36214DC9F14A42FD7A2FDB84856BCA5C44C2"
                        },
                        new
                        {
                            Id = new Guid("42320546-2688-48a1-8481-913a693aaa0a"),
                            Login = "petr@gmail.com",
                            Password = "3043AA4A83B0934982956A90828140CB834869135B5F294938865DE12E036DE440A330E1E8529BEC15DDD59F18D1161A97BFEC110D2622680F2C714A737D7061"
                        });
                });

            modelBuilder.Entity("iShopMain.Models.Entity.UserInfo.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InformationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bcf071d-c7f1-43e3-9150-a2976a237cab"),
                            AccountId = new Guid("606d29c4-7610-48ee-871e-d1308167f893"),
                            InformationId = new Guid("76a19559-5cbf-4441-b354-146a50ad2d2d"),
                            RoleId = new Guid("1a0a3dfa-6f09-4fa4-820b-22d75ab6ac0f")
                        },
                        new
                        {
                            Id = new Guid("b5ceb119-b146-46c1-b577-8d232a76514d"),
                            AccountId = new Guid("42320546-2688-48a1-8481-913a693aaa0a"),
                            InformationId = new Guid("7b9bab6e-fd30-411a-b082-6a5dceec665a"),
                            RoleId = new Guid("34137b96-9b27-4d0e-b11c-ea7946a620ff")
                        });
                });

            modelBuilder.Entity("iShopMain.Models.Entity.UserInfo.InformationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateOfRegistration")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Informations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76a19559-5cbf-4441-b354-146a50ad2d2d"),
                            DateOfRegistration = new DateOnly(2023, 5, 18),
                            Email = "alesha@mail.ru",
                            Name = "Алексей",
                            Patronymic = "Васильевич",
                            PhoneNumber = "+32112345698",
                            Surname = "Иванов"
                        },
                        new
                        {
                            Id = new Guid("7b9bab6e-fd30-411a-b082-6a5dceec665a"),
                            DateOfRegistration = new DateOnly(2023, 5, 18),
                            Email = "petr@gmail.com",
                            Name = "Petr",
                            Patronymic = "Sergeevich",
                            PhoneNumber = "+12345689093",
                            Surname = "Vasiliev"
                        });
                });

            modelBuilder.Entity("iShopMain.Models.Entity.UserInfo.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a0a3dfa-6f09-4fa4-820b-22d75ab6ac0f"),
                            NameRole = "user"
                        },
                        new
                        {
                            Id = new Guid("34137b96-9b27-4d0e-b11c-ea7946a620ff"),
                            NameRole = "admin"
                        });
                });

            modelBuilder.Entity("iShopMainVer2.Models.Entity.Characteristics.Camera", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MainCamera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaximumFrequencyVideo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaximumResolutionVideo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UltraWideAngleCamera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WebCamera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZoomCamera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("iShopMainVer2.Models.Entity.Characteristics.PowerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BatteryCapacity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFastCharging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPowerUnit")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWirelessCharging")
                        .HasColumnType("boolean");

                    b.Property<string>("TypeOfChargingConnector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkingHours")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("iShopMainVer2.Models.Entity.Characteristics.ScreenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DiagonalScreen")
                        .HasColumnType("integer");

                    b.Property<int>("FrequencyScreen")
                        .HasColumnType("integer");

                    b.Property<bool>("IsTouchScreen")
                        .HasColumnType("boolean");

                    b.Property<string>("ResolutionScreen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeScreen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Screens");
                });

            modelBuilder.Entity("iShopMainVer2.Models.Entity.Сharacteristic.GeneralCharacteristics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperationSystem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductServiceLife")
                        .HasColumnType("integer");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WarrantyPeriod")
                        .HasColumnType("integer");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GeneralCharacteristics");
                });

            modelBuilder.Entity("iShopMainVer2.Models.Entity.Сharacteristic.Materials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MaterialBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("iShopMainVer2.Models.Entity.Сharacteristic.MemoryAndProcessorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("NumberOfProcessorCores")
                        .HasColumnType("integer");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MemoryAndProcessors");
                });

            modelBuilder.Entity("iShopMainVer2.Models.Entity.СharacteristicInformation.Characteristics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CameraId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GeneralCharacteristicsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MemoryAndProcessorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PowerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ScreenId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Сharacteristics");
                });
#pragma warning restore 612, 618
        }
    }
}
